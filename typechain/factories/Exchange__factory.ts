/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exchange, ExchangeInterface } from "../Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftOracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_specId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_payment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_assetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_pricingAsset",
        type: "string",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetBear",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetBull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "NewOracle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "Pause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "StartRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ETHER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "PartialLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adjustCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageRate",
        type: "uint256",
      },
    ],
    name: "betBearEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_usdPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageRate",
        type: "uint256",
      },
    ],
    name: "betBearUsd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageRate",
        type: "uint256",
      },
    ],
    name: "betBullEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_usdPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageRate",
        type: "uint256",
      },
    ],
    name: "betBullUsdc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIndexPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ledger",
    outputs: [
      {
        internalType: "enum Exchange.Position",
        name: "position",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "liquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nftOracle",
    outputs: [
      {
        internalType: "contract NftOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleLatestRoundId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingAsset",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roundNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bullInitialMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bullMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bullMarginDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bullAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bearInitialMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bearMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bearMarginDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bearAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bullAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "bearAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "showUsdBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "specId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600480546001600160a01b03191690553480156200002157600080fd5b5060405162002864380380620028648339810160408190526200004491620002ac565b6200004f3362000150565b6000805460ff60a01b1916815560018055600280546001600160a01b0319166001600160a01b03891690811790915560405162c06d1b60e01b815262c06d1b90620000a5908990899089908990600401620003b1565b6020604051808303816000875af1158015620000c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000eb919062000403565b6008819055600380546001600160a01b038086166001600160a01b031992831617909255600a899055600b889055600c80549288169290911691909117905583519091506200014290600d906020860190620001a0565b505050505050505062000459565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001ae906200041d565b90600052602060002090601f016020900481019282620001d257600085556200021d565b82601f10620001ed57805160ff19168380011785556200021d565b828001600101855582156200021d579182015b828111156200021d57825182559160200191906001019062000200565b506200022b9291506200022f565b5090565b5b808211156200022b576000815560010162000230565b80516001600160a01b03811681146200025e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002965781810151838201526020016200027c565b83811115620002a6576000848401525b50505050565b60008060008060008060c08789031215620002c657600080fd5b620002d18762000246565b95506020870151945060408701519350620002ef6060880162000246565b60808801519093506001600160401b03808211156200030d57600080fd5b818901915089601f8301126200032257600080fd5b81518181111562000337576200033762000263565b604051601f8201601f19908116603f0116810190838211818310171562000362576200036262000263565b816040528281528c60208487010111156200037c57600080fd5b6200038f83602083016020880162000279565b8096505050505050620003a560a0880162000246565b90509295509295509295565b84815283602082015260018060a01b03831660408201526080606082015260008251806080840152620003ec8160a085016020870162000279565b601f01601f19169190910160a00195945050505050565b6000602082840312156200041657600080fd5b5051919050565b600181811c908216806200043257607f821691505b6020821081036200045357634e487b7160e01b600052602260045260246000fd5b50919050565b6123fb80620004696000396000f3fe6080604052600436106101e35760003560e01c8063713f85fc11610102578063a3e6ba9411610095578063e93483c611610064578063e93483c61461066d578063ec32470314610682578063f2fde38b14610698578063fc2a88c3146106b857600080fd5b8063a3e6ba94146105df578063b83e62bf146105f5578063cc218ece14610615578063dd1f75961461064d57600080fd5b80637ff78ac8116100d15780637ff78ac8146104885780638c65c81f146104a85780638da5cb5b146105b957806398ea5fca146105d757600080fd5b8063713f85fc146103d8578063715018a6146103f85780637285c58b1461040d578063741bef1a1461046857600080fd5b80633bed33ce1161017a5780634e2786fb116101495780634e2786fb1461036357806358c0994a1461037957806359bc58d81461038e5780635c975abb146103ae57600080fd5b80633bed33ce146102ed578063402dfe1f1461030d57806342cb1fbc1461032d57806342f6487a1461034d57600080fd5b80631ba46cfd116101b65780631ba46cfd146102535780631c262d401461028b5780632552db4a146102ab578063286c2add146102cd57600080fd5b806305230eb7146101e85780631604f9ea146102105780631747b9fe146102275780631aa46f591461023d575b600080fd5b3480156101f457600080fd5b506101fd6106ce565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b5061022561077f565b005b34801561023357600080fd5b506101fd600a5481565b34801561024957600080fd5b506101fd60085481565b34801561025f57600080fd5b50600c54610273906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b34801561029757600080fd5b506102256102a6366004611ffd565b610826565b3480156102b757600080fd5b506102c0610b46565b6040516102079190612018565b3480156102d957600080fd5b50600254610273906001600160a01b031681565b3480156102f957600080fd5b5061022561030836600461206d565b610bd4565b34801561031957600080fd5b50610225610328366004612086565b610d56565b34801561033957600080fd5b50600454610273906001600160a01b031681565b34801561035957600080fd5b506101fd600b5481565b34801561036f57600080fd5b506101fd60055481565b34801561038557600080fd5b506101fd610e2e565b34801561039a57600080fd5b506102256103a9366004612086565b610eab565b3480156103ba57600080fd5b50600054600160a01b900460ff166040519015158152602001610207565b3480156103e457600080fd5b506102256103f3366004612086565b611168565b34801561040457600080fd5b50610225611234565b34801561041957600080fd5b506104596104283660046120b2565b601160209081526000928352604080842090915290825290208054600182015460029092015460ff91821692911683565b604051610207939291906120de565b34801561047457600080fd5b50600354610273906001600160a01b031681565b34801561049457600080fd5b506102256104a3366004612086565b611248565b3480156104b457600080fd5b506105436104c336600461206d565b600f60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c909c01549a9b999a9899979896979596949593949293919290916001600160a01b039081169190811690600160a01b900460ff168e565b604080519e8f5260208f019d909d529b8d019a909a5260608c019890985260808b019690965260a08a019490945260c089019290925260e08801526101008701526101208601526101408501526001600160a01b039081166101608501521661018083015215156101a08201526101c001610207565b3480156105c557600080fd5b506000546001600160a01b0316610273565b6102256114f7565b3480156105eb57600080fd5b506101fd60075481565b34801561060157600080fd5b50610225610610366004611ffd565b6115b0565b34801561062157600080fd5b506101fd610630366004612116565b601260209081526000928352604080842090915290825290205481565b34801561065957600080fd5b506101fd610668366004612140565b6116dc565b34801561067957600080fd5b5061022561170d565b34801561068e57600080fd5b506101fd60065481565b3480156106a457600080fd5b506102256106b3366004611ffd565b611e49565b3480156106c457600080fd5b506101fd60095481565b600480546001600160a01b039081166000908152601260209081526040808320338452909152808220546003548251633fabe5a360e21b8152925193959194869491169263feaf968c928181019260a0929091908290030181865afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190612184565b5050509150506107788183611ebf90919063ffffffff16565b9250505090565b610787611ed2565b600254600a54600b54600c5460405162c06d1b60e01b81526000946001600160a01b039081169462c06d1b946107ca949193909290911690600d9060040161220e565b6020604051808303816000875af11580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906122d6565b9050600854811461082357600880546009558190555b50565b61082e611ed2565b60005b6005548111610b42576000818152600f60205260409020600b01546001600160a01b03838116911614801561088357506000818152600f60205260409020600c0154600160a01b900460ff1615156001145b156109b5576000818152600f6020526040902060038101546005909101546028826108af836064612305565b6108b99190612324565b10156109b257600060286108ce84603c612305565b6108d89190612324565b60286108e5846064612305565b6108ef9190612324565b6108f99190612346565b905080600f600086815260200190815260200160002060030160008282546109219190612346565b90915550506000848152600f602052604081206004018054839290610947908490612346565b909155506109589050816002612305565b6000858152600f602052604081206005018054909190610979908490612346565b9091555061098a9050816002612305565b6000858152600f60205260408120600a0180549091906109ab908490612346565b9091555050505b50505b6000818152600f60205260409020600c01546001600160a01b0383811691161480156109fe57506000818152600f60205260409020600c0154600160a01b900460ff1615156001145b15610b30576000818152600f602052604090206007810154600990910154602882610a2a836064612305565b610a349190612324565b1015610b2d5760006028610a4984603c612305565b610a539190612324565b6028610a60846064612305565b610a6a9190612324565b610a749190612346565b905080600f60008681526020019081526020016000206007016000828254610a9c9190612346565b90915550506000848152600f602052604081206008018054839290610ac2908490612346565b90915550610ad39050816002612305565b6000858152600f602052604081206009018054909190610af4908490612346565b90915550610b059050816002612305565b6000858152600f60205260408120600a018054909190610b26908490612346565b9091555050505b50505b80610b3a8161235d565b915050610831565b5050565b600d8054610b53906121d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7f906121d4565b8015610bcc5780601f10610ba157610100808354040283529160200191610bcc565b820191906000526020600020905b815481529060010190602001808311610baf57829003601f168201915b505050505081565b6004546001600160a01b03166000908152601260209081526040808320338452909152902054811115610c645760405162461bcd60e51b815260206004820152602d60248201527f44657369726520616d6f756e74206973206d6f7265207468616e20636f6c6c6160448201526c746572616c2062616c616e636560981b60648201526084015b60405180910390fd5b6004546001600160a01b03166000908152601260209081526040808320338452909152902054610c949082611f2c565b6004546001600160a01b0316600090815260126020908152604080832033808552925280832093909355915183156108fc0291849190818181858888f19350505050158015610ce7573d6000803e3d6000fd5b506004546001600160a01b031660008181526012602090815260408083203380855290835292819020548151948552918401929092528282018490526060830152517ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5679181900360800190a150565b610d5e611f38565b600260015403610d805760405162461bcd60e51b8152600401610c5b90612376565b600260015560035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df39190612184565b50505091505060008185610e079190612324565b90506000610e158386612324565b9050610e22828286610eab565b50506001805550505050565b60008080805b6005548111610ea0576000818152600f60205260409020600c0154600160a01b900460ff161515600103610e8e576000818152600f6020526040902060010154610e7e90846123ad565b925081610e8a8161235d565b9250505b80610e988161235d565b915050610e34565b506107788183612324565b610eb3611f38565b600260015403610ed55760405162461bcd60e51b8152600401610c5b90612376565b60026001556003811115610f2b5760405162461bcd60e51b815260206004820152601e60248201527f546865206d6178696d756d206c657665726167652072617465206973203300006044820152606401610c5b565b6004546001600160a01b03166000908152601260209081526040808320338452909152902054831115610fbe5760405162461bcd60e51b815260206004820152603560248201527f596f757220626574206d617267696e2073686f756c64206265206c6573736572604482015274081d1a185b881e5bdd5c8818dbdb1b185d195c985b605a1b6064820152608401610c5b565b6004546001600160a01b0316600090815260126020908152604080832033845290915281208054859290610ff3908490612346565b9091555050600580546000908152600f6020526040808220600c0180546001600160a01b03191633179055825482528082206001018590558254825280822060070186905591548152206006018390558261104e8282612305565b6110589190612346565b6005546000908152600f60205260409020600801556110778184612305565b6005546000908152600f60205260408120600901805490919061109b9084906123ad565b909155506110ab90508184612305565b6005546000908152600f60205260408120600a0180549091906110cf9084906123ad565b9091555050600580546000908152600f6020526040902001541580159061111257506005546000908152600f60205260409020600c0154600160a01b900460ff16155b1561115f57600580546000908152600f6020526040808220600c01805460ff60a01b1916600160a01b179055825482528120429055815460019291906111599084906123ad565b90915550505b50506001805550565b611170611f38565b6002600154036111925760405162461bcd60e51b8152600401610c5b90612376565b600260015560035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa1580156111e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112059190612184565b505050915050600081856112199190612324565b905060006112278386612324565b9050610e22828286611248565b61123c611ed2565b6112466000611f85565b565b611250611f38565b6002600154036112725760405162461bcd60e51b8152600401610c5b90612376565b600260015560038111156112c85760405162461bcd60e51b815260206004820152601e60248201527f546865206d6178696d756d206c657665726167652072617465206973203300006044820152606401610c5b565b6004546001600160a01b0316600090815260126020908152604080832033845290915290205483111561135b5760405162461bcd60e51b815260206004820152603560248201527f596f75722062657420616d6f756e742073686f756c64206265206c6573736574604482015274081d1a185b881e5bdd5c8818dbdb1b185d195c985b605a1b6064820152608401610c5b565b6004546001600160a01b0316600090815260126020908152604080832033845290915281208054859290611390908490612346565b9091555050600580546000908152600f6020526040808220600b0180546001600160a01b0319163317905582548252808220600101859055825482528082206002018690559154815220600301839055826113eb8282612305565b6113f59190612346565b6005546000908152600f60205260409020600401556114148184612305565b600f60006005548152602001908152602001600020600501600082825461143b91906123ad565b9091555061144b90508184612305565b6005546000908152600f60205260408120600a01805490919061146f9084906123ad565b90915550506005546000908152600f60205260409020600901541580159061111257506005546000908152600f60205260409020600c0154600160a01b900460ff1661115f57600580546000908152600f6020526040808220600c01805460ff60a01b1916600160a01b179055825482528120429055815460019291906111599084906123ad565b6004546001600160a01b031660009081526012602090815260408083203384529091529020546115279034611fd5565b600480546001600160a01b039081166000908152601260208181526040808420338086529083528185209790975594549093168083529083528382208583528352908390205483519182529181019390935234838301526060830152517fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d79181900360800190a1565b6115b8611ed2565b60005b6005548111610b42576000818152600f60205260408120600b01546001600160a01b038085169116036115fc57506000818152600f60205260409020600501545b6000828152600f60205260409020600b01546001600160a01b0380851691160361163457506000818152600f60205260409020600901545b6004546001600160a01b03908116600090815260126020908152604080832093871683529290522054600590829061166d906064612305565b6116779190612324565b10156116c957600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0385161790555b50806116d48161235d565b9150506115bb565b601060205281600052604060002081815481106116f857600080fd5b90600052602060002001600091509150505481565b611715611f38565b61171d611ed2565b600254600854604051630dd953fb60e41b81526004810191909152600091829182916001600160a01b03169063dd953fb090602401602060405180830381865afa15801561176f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179391906122d6565b600254600954604051630dd953fb60e41b81529293506000926001600160a01b039092169163dd953fb0916117ce9160040190815260200190565b602060405180830381865afa1580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f91906122d6565b9050600061181b610e2e565b905060788361182b836064612305565b6118359190612324565b11158015611859575060508361184c836064612305565b6118569190612324565b10155b1561186957809450819350611870565b8294508193505b8415801590611888575060026118868587612324565b105b80156118a9575060058461189d87600a612305565b6118a79190612324565b115b15611e425760005b6005548111611e40576000818152600f60205260409020600c810154600160a01b900460ff161515600103611e2d57600086881115611b8157866118f5818a612346565b6000858152600f60205260409020600901546119119190612305565b61191b9190612324565b6000848152600f60205260409020600801549091501580159061194e57506000838152600f602052604090206007015481105b801561198957506000838152600f6020526040902060068101546007909101546032919061197d906064612305565b6119879190612324565b105b15611a56576000838152600f6020908152604080832060078101546004546001600160a01b03908116865260128552838620600c90930154168552925282208054919290916119d99084906123ad565b90915550506000838152600f602052604081206009810154600a909101805491929091611a07908490612346565b90915550506000838152600f60205260408120600c81018054600983018490556007808401859055600684018590556008909301939093556001600160a81b0319909216909155889055611b81565b6000838152600f602052604090206008015415801590611a8757506000838152600f60205260409020600701548110155b15611ae3576000838152600f6020526040812060078101546005909101805491929091611ab59084906123ad565b90915550506000838152600f6020526040812060078101546003909101805491929091611a079084906123ad565b6000838152600f602052604081206009018054839290611b04908490612346565b90915550506000838152600f602052604081206007018054839290611b2a908490612346565b90915550506000838152600f602052604081206005018054839290611b509084906123ad565b90915550506000838152600f602052604081206003018054839290611b769084906123ad565b909155505060078890555b86881015611e2b5787611b948189612346565b6000858152600f6020526040902060050154611bb09190612305565b611bba9190612324565b6000848152600f602052604090206004015490915015801590611bed57506000838152600f602052604090206003015481105b8015611c2857506000838152600f60205260409020600281015460039091015460329190611c1c906064612305565b611c269190612324565b105b15611d00576000838152600f6020908152604080832060038101546004546001600160a01b03908116865260128552838620600b9093015416855292528220805491929091611c789084906123ad565b90915550506000838152600f602052604081206005810154600a909101805491929091611ca6908490612346565b90915550506000838152600f60205260408120600b810180546001600160a01b03191690556005810182905560038101829055600281018290556004810191909155600c01805460ff60a01b191690556007889055611e2b565b6000838152600f602052604090206004015415801590611d3157506000838152600f60205260409020600301548110155b15611d8d576000838152600f6020526040812060038101546009909101805491929091611d5f9084906123ad565b90915550506000838152600f6020526040812060038101546007909101805491929091611ca69084906123ad565b6000838152600f602052604081206005018054839290611dae908490612346565b90915550506000838152600f602052604081206003018054839290611dd4908490612346565b90915550506000838152600f602052604081206009018054839290611dfa9084906123ad565b90915550506000838152600f602052604081206007018054839290611e209084906123ad565b909155505060078890555b505b5080611e388161235d565b9150506118b1565b505b5050505050565b611e51611ed2565b6001600160a01b038116611eb65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c5b565b61082381611f85565b6000611ecb8284612305565b9392505050565b6000546001600160a01b031633146112465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c5b565b6000611ecb8284612346565b600054600160a01b900460ff16156112465760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610c5b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611ecb82846123ad565b80356001600160a01b0381168114611ff857600080fd5b919050565b60006020828403121561200f57600080fd5b611ecb82611fe1565b600060208083528351808285015260005b8181101561204557858101830151858201604001528201612029565b81811115612057576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561207f57600080fd5b5035919050565b60008060006060848603121561209b57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156120c557600080fd5b823591506120d560208401611fe1565b90509250929050565b606081016002851061210057634e487b7160e01b600052602160045260246000fd5b9381526020810192909252151560409091015290565b6000806040838503121561212957600080fd5b61213283611fe1565b91506120d560208401611fe1565b6000806040838503121561215357600080fd5b61215c83611fe1565b946020939093013593505050565b805169ffffffffffffffffffff81168114611ff857600080fd5b600080600080600060a0868803121561219c57600080fd5b6121a58661216a565b94506020860151935060408601519250606086015191506121c86080870161216a565b90509295509295909350565b600181811c908216806121e857607f821691505b60208210810361220857634e487b7160e01b600052602260045260246000fd5b50919050565b84815260208082018590526001600160a01b0384166040830152608060608301528254600091908290600181811c908281168061224c57607f831692505b858310810361226957634e487b7160e01b85526022600452602485fd5b6080880183905260a088018180156122885760018114612299576122c4565b60ff198616825287820196506122c4565b60008b81526020902060005b868110156122be578154848201529085019089016122a5565b83019750505b50949c9b505050505050505050505050565b6000602082840312156122e857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561231f5761231f6122ef565b500290565b60008261234157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612358576123586122ef565b500390565b60006001820161236f5761236f6122ef565b5060010190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156123c0576123c06122ef565b50019056fea26469706673582212204481701e7705b95078e89cc04ab9a8ad4793e7f1dff1e9d5a3a26ad63bfb928064736f6c634300080d0033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Exchange";
  }

  deploy(
    _nftOracleAddress: string,
    _specId: BytesLike,
    _payment: BigNumberish,
    _assetAddress: string,
    _pricingAsset: string,
    _priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Exchange> {
    return super.deploy(
      _nftOracleAddress,
      _specId,
      _payment,
      _assetAddress,
      _pricingAsset,
      _priceFeed,
      overrides || {}
    ) as Promise<Exchange>;
  }
  getDeployTransaction(
    _nftOracleAddress: string,
    _specId: BytesLike,
    _payment: BigNumberish,
    _assetAddress: string,
    _pricingAsset: string,
    _priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftOracleAddress,
      _specId,
      _payment,
      _assetAddress,
      _pricingAsset,
      _priceFeed,
      overrides || {}
    );
  }
  attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }
  static readonly contractName: "Exchange";
  public readonly contractName: "Exchange";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
